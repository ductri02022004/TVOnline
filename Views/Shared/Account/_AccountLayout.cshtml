<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewBag.Title</title>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/custom.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />
	@await RenderSectionAsync("Styles", required: false)
</head>
<body>
	<div class="color-mode d-flex justify-content-end p-3">
		<button id="theme-toggle" class="btn btn-sm">
			<i class="bi bi-moon-stars" id="dark-mode-icon"></i>
			<i class="bi bi-sun" id="light-mode-icon" style="display: none;"></i>
		</button>
	</div>

	<div class="account-wrapper">
		@RenderBody()
	</div>

	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	<script>
        // Check for saved theme preference or prefer-color-scheme
        const getStoredTheme = () => localStorage.getItem('theme');
        const getPreferredTheme = () => {
            const storedTheme = getStoredTheme();
            if (storedTheme) {
                return storedTheme;
            }
            return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };

        const setTheme = theme => {
            document.documentElement.setAttribute('data-bs-theme', theme);
            localStorage.setItem('theme', theme);
            
            // Update icons
            const darkIcon = document.getElementById('dark-mode-icon');
            const lightIcon = document.getElementById('light-mode-icon');
            
            if (theme === 'dark') {
                lightIcon.style.display = 'inline-block';
                darkIcon.style.display = 'none';
            } else {
                lightIcon.style.display = 'none';
                darkIcon.style.display = 'inline-block';
            }
        };

        // Set theme on page load
        setTheme(getPreferredTheme());

        // Toggle theme button
        document.getElementById('theme-toggle').addEventListener('click', () => {
            const currentTheme = document.documentElement.getAttribute('data-bs-theme');
            setTheme(currentTheme === 'dark' ? 'light' : 'dark');
        });
    </script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
