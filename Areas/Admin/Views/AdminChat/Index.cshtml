@{
    ViewData["Title"] = "Admin Chat";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Users</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush" id="users-list">
                        <!-- Users with chat history will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0" id="chat-user-name">Select a user to start chatting</h5>
                    <span class="badge bg-light text-dark" id="user-status"></span>
                </div>
                <div class="card-body chat-container" id="chat-messages">
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-comments fa-3x mb-3"></i>
                        <p>Select a user from the list to view conversation</p>
                    </div>
                </div>
                <div class="card-footer">
                    <form id="message-form" class="d-flex">
                        <input type="text" id="message-input" class="form-control me-2" placeholder="Type a message..." disabled>
                        <button type="submit" id="send-button" class="btn btn-primary" disabled>
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            const adminId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";
            let currentUserId = null;
            let connection = null;
            
            // Initialize SignalR connection
            function initializeSignalR() {
                connection = new signalR.HubConnectionBuilder()
                    .withUrl("/chatHub")
                    .build();

                connection.on("ReceiveMessage", function (message) {
                    if (currentUserId === message.senderId || currentUserId === message.receiverId) {
                        addMessageToChat(message);
                        
                        // If message is from the selected user, mark as read
                        if (message.senderId === currentUserId) {
                            markAsRead(message.senderId);
                            
                            // Update unread count badge to 0
                            $(`#unread-${message.senderId}`).text("").hide();
                        }
                    } else {
                        // If message is from another user, update their unread count
                        incrementUnreadCount(message.senderId);
                    }
                });

                connection.start().then(function () {
                    console.log("SignalR Connected");
                    // Join admin group
                    connection.invoke("JoinGroup", adminId).catch(function (err) {
                        console.error(err);
                    });
                    
                    // Load users with chat history
                    loadUsersWithChatHistory();
                }).catch(function (err) {
                    console.error(err);
                });
            }

            // Load users who have chat history with admin
            function loadUsersWithChatHistory() {
                $.ajax({
                    url: "/Admin/AdminChat/GetUsersWithChatHistory",
                    type: "GET",
                    success: function (users) {
                        $("#users-list").empty();
                        
                        if (users.length === 0) {
                            $("#users-list").append(`
                                <div class="list-group-item text-center text-muted">
                                    No chat history found
                                </div>
                            `);
                            return;
                        }
                        
                        users.forEach(function (userId) {
                            // Get user details and unread count
                            $.ajax({
                                url: `/Admin/AdminChat/GetUserDetails?userId=${userId}`,
                                type: "GET",
                                success: function (user) {
                                    // Get unread message count
                                    $.ajax({
                                        url: `/Admin/AdminChat/GetUnreadCount?userId=${userId}`,
                                        type: "GET",
                                        success: function (count) {
                                            const unreadBadge = count > 0 
                                                ? `<span class="badge bg-danger rounded-pill" id="unread-${userId}">${count}</span>` 
                                                : `<span class="badge rounded-pill" id="unread-${userId}" style="display: none;"></span>`;
                                                
                                            $("#users-list").append(`
                                                <button class="list-group-item list-group-item-action d-flex justify-content-between align-items-center user-item" 
                                                        data-user-id="${userId}" data-user-name="${user.userName || 'Unknown User'}">
                                                    <div>
                                                        <i class="fas fa-user-circle me-2"></i>
                                                        <span>${user.userName || 'Unknown User'}</span>
                                                    </div>
                                                    ${unreadBadge}
                                                </button>
                                            `);
                                        }
                                    });
                                }
                            });
                        });
                    }
                });
            }

            // Handle user selection
            $(document).on("click", ".user-item", function () {
                $(".user-item").removeClass("active");
                $(this).addClass("active");
                
                const userId = $(this).data("user-id");
                const userName = $(this).data("user-name");
                
                currentUserId = userId;
                $("#chat-user-name").text(userName);
                $("#message-input").prop("disabled", false);
                $("#send-button").prop("disabled", false);
                
                // Mark messages from this user as read
                markAsRead(userId);
                
                // Load chat history
                loadChatHistory(userId);
            });

            // Load chat history with selected user
            function loadChatHistory(userId) {
                $.ajax({
                    url: `/Admin/AdminChat/GetChatHistory?userId=${adminId}&otherUserId=${userId}`,
                    type: "GET",
                    success: function (messages) {
                        $("#chat-messages").empty();
                        
                        if (messages.length === 0) {
                            $("#chat-messages").html(`
                                <div class="text-center text-muted py-5">
                                    <p>No messages yet</p>
                                </div>
                            `);
                            return;
                        }
                        
                        messages.forEach(function (message) {
                            addMessageToChat(message);
                        });
                        
                        // Scroll to bottom
                        scrollToBottom();
                    }
                });
            }

            // Add message to chat
            function addMessageToChat(message) {
                const isFromAdmin = message.senderId === adminId;
                const messageHtml = `
                    <div class="message ${isFromAdmin ? 'message-sent' : 'message-received'}">
                        <div class="message-content">${message.content}</div>
                        <small class="message-time">${new Date(message.timestamp).toLocaleTimeString()}</small>
                    </div>
                `;
                $("#chat-messages").append(messageHtml);
                scrollToBottom();
            }

            // Send message
            $("#message-form").on("submit", function (e) {
                e.preventDefault();
                
                if (!currentUserId) return;
                
                const content = $("#message-input").val().trim();
                if (content) {
                    const message = {
                        senderId: adminId,
                        receiverId: currentUserId,
                        message: content
                    };
                    
                    $.ajax({
                        url: "/Admin/AdminChat/SendMessage",
                        type: "POST",
                        data: message,
                        success: function (response) {
                            $("#message-input").val("");
                        }
                    });
                }
            });

            // Mark messages as read
            function markAsRead(senderId) {
                $.ajax({
                    url: "/Admin/AdminChat/MarkAsRead",
                    type: "POST",
                    data: {
                        senderId: senderId,
                        receiverId: adminId
                    },
                    success: function () {
                        $(`#unread-${senderId}`).text("").hide();
                    }
                });
            }

            // Increment unread count
            function incrementUnreadCount(userId) {
                const badge = $(`#unread-${userId}`);
                let count = parseInt(badge.text()) || 0;
                badge.text(count + 1).show();
                
                // If user not in list, reload list
                if (badge.length === 0) {
                    loadUsersWithChatHistory();
                }
            }

            // Scroll chat to bottom
            function scrollToBottom() {
                const chatContainer = document.getElementById("chat-messages");
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }

            // Initialize
            initializeSignalR();
            
            // Auto refresh user list every 30 seconds
            setInterval(loadUsersWithChatHistory, 30000);
        });
    </script>
}

<style>
    .chat-container {
        height: 400px;
        overflow-y: auto;
        padding: 20px;
        background-color: #f8f9fa;
    }
    
    .message {
        margin-bottom: 15px;
        max-width: 80%;
        clear: both;
    }
    
    .message-sent {
        float: right;
        text-align: right;
    }
    
    .message-received {
        float: left;
        text-align: left;
    }
    
    .message-content {
        padding: 10px 15px;
        border-radius: 18px;
        display: inline-block;
        word-break: break-word;
    }
    
    .message-sent .message-content {
        background-color: #0d6efd;
        color: white;
        border-bottom-right-radius: 4px;
    }
    
    .message-received .message-content {
        background-color: #e9ecef;
        color: #212529;
        border-bottom-left-radius: 4px;
    }
    
    .message-time {
        display: block;
        font-size: 12px;
        margin-top: 5px;
        color: #6c757d;
    }
</style> 